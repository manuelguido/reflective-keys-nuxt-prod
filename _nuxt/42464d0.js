(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{320:function(n,t,e){var content=e(377);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(109).default)("9a67f3c4",content,!0,{sourceMap:!1})},376:function(n,t,e){"use strict";e(320)},377:function(n,t,e){var r=e(108)(!1);r.push([n.i,'body[data-v-05ebfb10]{font-family:"Alatsi",sans-serif;margin:0;overflow:hidden;background:#000}.container[data-v-05ebfb10]{display:flex;justify-content:center;align-items:center;position:absolute;top:0;left:0;width:100vw;height:100vh}.title[data-v-05ebfb10]{font-size:10vw;color:#fff}canvas[data-v-05ebfb10]{width:100%}',""]),n.exports=r},381:function(n,t,e){"use strict";e.r(t);e(337),e(15),e(339),e(345),e(347),e(348),e(350),e(353),e(354),e(355),e(356),e(357),e(358),e(359),e(360),e(362),e(363),e(364),e(365),e(366),e(367),e(368),e(369),e(373),e(374),e(375);var r={name:"MovingBackground",data:function(){return{width:0,height:0}},mounted:function(){this.loadAnimation()},methods:{loadAnimation:function(){var canvas=document.createElement("canvas"),n=canvas.width=window.innerWidth,t=canvas.height=window.innerHeight;document.body.appendChild(canvas);for(var e=canvas.getContext("webgl"),r={x:0,y:0},o=100,l=[],i=0;i<o;i++){var f=60*Math.random()+10;l.push({x:Math.random()*(n-2*f)+f,y:Math.random()*(t-2*f)+f,vx:3*(Math.random()-.5),vy:3*(Math.random()-.5),r:.75*f})}var d="\nprecision highp float;\n\nconst float WIDTH = "+(n>>0)+".0;\nconst float HEIGHT = "+(t>>0)+".0;\n\nuniform vec3 metaballs["+"100];\n\nvoid main(){\nfloat x = gl_FragCoord.x;\nfloat y = gl_FragCoord.y;\n\nfloat sum = 0.0;\nfor (int i = 0; i < "+"100; i++) {\nvec3 metaball = metaballs[i];\nfloat dx = metaball.x - x;\nfloat dy = metaball.y - y;\nfloat radius = metaball.z;\n\nsum += (radius * radius) / (dx * dx + dy * dy);\n}\n\nif (sum >= 0.99) {\ngl_FragColor = vec4(mix(vec3(x / WIDTH, y / HEIGHT, 1.0), vec3(0, 0, 0), max(0.0, 1.0 - (sum - 0.99) * 100.0)), 1.0);\nreturn;\n}\n\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n\n",c=A("\nattribute vec2 position;\n\nvoid main() {\n// position specifies only x and y.\n// We set z to be 0.0, and w to be 1.0\ngl_Position = vec4(position, 0.0, 1.0);\n}\n",e.VERTEX_SHADER),v=A(d,e.FRAGMENT_SHADER),m=e.createProgram();e.attachShader(m,c),e.attachShader(m,v),e.linkProgram(m),e.useProgram(m);var h=new Float32Array([-1,1,-1,-1,1,1,1,-1]),y=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,y),e.bufferData(e.ARRAY_BUFFER,h,e.STATIC_DRAW);var x=function(n,t){var r=e.getAttribLocation(n,t);if(-1===r)throw"Can not find attribute "+t+".";return r}(m,"position");e.enableVertexAttribArray(x),e.vertexAttribPointer(x,2,e.FLOAT,e.FALSE,8,0);var w=function(n,t){var r=e.getUniformLocation(n,t);if(-1===r)throw"Can not find uniform "+t+".";return r}(m,"metaballs");function A(n,t){var r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS))throw"Shader compile failed with: "+e.getShaderInfoLog(r);return r}!function r(){for(var f=0;f<o;f++){var d=l[f];d.x+=d.vx,d.y+=d.vy,(d.x<d.r||d.x>n-d.r)&&(d.vx*=-1),(d.y<d.r||d.y>t-d.r)&&(d.vy*=-1)}for(var c=new Float32Array(300),v=0;v<o;v++){var m=3*v,h=l[v];c[m+0]=h.x,c[m+1]=h.y,c[m+2]=h.r}e.uniform3fv(w,c),e.drawArrays(e.TRIANGLE_STRIP,0,4),requestAnimationFrame(r)}(),canvas.onmousemove=function(n){r.x=n.clientX,r.y=n.clientY}}}},o=(e(376),e(46)),component=Object(o.a)(r,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"container"})}),[],!1,null,"05ebfb10",null);t.default=component.exports}}]);